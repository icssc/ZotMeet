{
  "id": "64cb6217-f6c8-4912-8883-d4bb013fdc2d",
  "prevId": "c0379ab5-d2be-4fe0-9d63-0bd448a2566e",
  "version": "7",
  "dialect": "postgresql",
  "tables": {
    "public.availabilities": {
      "name": "availabilities",
      "schema": "",
      "columns": {
        "member_id": {
          "name": "member_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "meeting_day": {
          "name": "meeting_day",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "block_length": {
          "name": "block_length",
          "type": "smallint",
          "primaryKey": false,
          "notNull": true,
          "default": 15
        },
        "availability_string": {
          "name": "availability_string",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "availability": {
          "name": "availability",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "availabilities_member_id_members_id_fk": {
          "name": "availabilities_member_id_members_id_fk",
          "tableFrom": "availabilities",
          "tableTo": "members",
          "columnsFrom": [
            "member_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "availabilities_meeting_day_meeting_dates_id_fk": {
          "name": "availabilities_meeting_day_meeting_dates_id_fk",
          "tableFrom": "availabilities",
          "tableTo": "meeting_dates",
          "columnsFrom": [
            "meeting_day"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "availabilities_member_id_meeting_day_pk": {
          "name": "availabilities_member_id_meeting_day_pk",
          "columns": [
            "member_id",
            "meeting_day"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.groups": {
      "name": "groups",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "name": {
          "name": "name",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "groups_user_id_users_id_fk": {
          "name": "groups_user_id_users_id_fk",
          "tableFrom": "groups",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.guests": {
      "name": "guests",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "username": {
          "name": "username",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "meeting_id": {
          "name": "meeting_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "guests_meeting_id_meetings_id_fk": {
          "name": "guests_meeting_id_meetings_id_fk",
          "tableFrom": "guests",
          "tableTo": "meetings",
          "columnsFrom": [
            "meeting_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "guests_username_meeting_id_pk": {
          "name": "guests_username_meeting_id_pk",
          "columns": [
            "username",
            "meeting_id"
          ]
        }
      },
      "uniqueConstraints": {
        "guests_id_unique": {
          "name": "guests_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "checkConstraints": {}
    },
    "public.meeting_dates": {
      "name": "meeting_dates",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false,
          "default": "gen_random_uuid()"
        },
        "meeting_id": {
          "name": "meeting_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "date": {
          "name": "date",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "meeting_dates_meeting_id_meetings_id_fk": {
          "name": "meeting_dates_meeting_id_meetings_id_fk",
          "tableFrom": "meeting_dates",
          "tableTo": "meetings",
          "columnsFrom": [
            "meeting_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "meeting_dates_id_date_pk": {
          "name": "meeting_dates_id_date_pk",
          "columns": [
            "id",
            "date"
          ]
        }
      },
      "uniqueConstraints": {
        "meeting_dates_id_unique": {
          "name": "meeting_dates_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "checkConstraints": {}
    },
    "public.meetings": {
      "name": "meetings",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "uuid",
          "primaryKey": true,
          "notNull": true,
          "default": "gen_random_uuid()"
        },
        "title": {
          "name": "title",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "description": {
          "name": "description",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "location": {
          "name": "location",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "scheduled": {
          "name": "scheduled",
          "type": "boolean",
          "primaryKey": false,
          "notNull": false
        },
        "from_time": {
          "name": "from_time",
          "type": "char(5)",
          "primaryKey": false,
          "notNull": true
        },
        "to_time": {
          "name": "to_time",
          "type": "char(5)",
          "primaryKey": false,
          "notNull": true
        },
        "timezone": {
          "name": "timezone",
          "type": "timezone",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false,
          "default": "'PST'"
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": false
        },
        "host_id": {
          "name": "host_id",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "dates": {
          "name": "dates",
          "type": "jsonb",
          "primaryKey": false,
          "notNull": true,
          "default": "'[]'::jsonb"
        }
      },
      "indexes": {},
      "foreignKeys": {
        "meetings_group_id_groups_id_fk": {
          "name": "meetings_group_id_groups_id_fk",
          "tableFrom": "meetings",
          "tableTo": "groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "meetings_host_id_members_id_fk": {
          "name": "meetings_host_id_members_id_fk",
          "tableFrom": "meetings",
          "tableTo": "members",
          "columnsFrom": [
            "host_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "no action",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.members": {
      "name": "members",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "displayName": {
          "name": "displayName",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {},
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "members_id_unique": {
          "name": "members_id_unique",
          "nullsNotDistinct": false,
          "columns": [
            "id"
          ]
        }
      },
      "checkConstraints": {}
    },
    "public.members_in_meeting": {
      "name": "members_in_meeting",
      "schema": "",
      "columns": {
        "member_id": {
          "name": "member_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "meeting_id": {
          "name": "meeting_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        },
        "availability": {
          "name": "availability",
          "type": "attendance",
          "typeSchema": "public",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "members_in_meeting_member_id_members_id_fk": {
          "name": "members_in_meeting_member_id_members_id_fk",
          "tableFrom": "members_in_meeting",
          "tableTo": "members",
          "columnsFrom": [
            "member_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "members_in_meeting_meeting_id_meetings_id_fk": {
          "name": "members_in_meeting_meeting_id_meetings_id_fk",
          "tableFrom": "members_in_meeting",
          "tableTo": "meetings",
          "columnsFrom": [
            "meeting_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "members_in_meeting_member_id_meeting_id_pk": {
          "name": "members_in_meeting_member_id_meeting_id_pk",
          "columns": [
            "member_id",
            "meeting_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.oauth_accounts": {
      "name": "oauth_accounts",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_id": {
          "name": "provider_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "provider_user_id": {
          "name": "provider_user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "oauth_accounts_user_id_users_id_fk": {
          "name": "oauth_accounts_user_id_users_id_fk",
          "tableFrom": "oauth_accounts",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "oauth_accounts_provider_id_provider_user_id_pk": {
          "name": "oauth_accounts_provider_id_provider_user_id_pk",
          "columns": [
            "provider_id",
            "provider_user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.sessions": {
      "name": "sessions",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "expires_at": {
          "name": "expires_at",
          "type": "timestamp with time zone",
          "primaryKey": false,
          "notNull": true
        },
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {
        "user_idx_sessions": {
          "name": "user_idx_sessions",
          "columns": [
            {
              "expression": "user_id",
              "isExpression": false,
              "asc": true,
              "nulls": "last"
            }
          ],
          "isUnique": false,
          "concurrently": false,
          "method": "btree",
          "with": {}
        }
      },
      "foreignKeys": {
        "sessions_user_id_users_id_fk": {
          "name": "sessions_user_id_users_id_fk",
          "tableFrom": "sessions",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {},
      "checkConstraints": {}
    },
    "public.users": {
      "name": "users",
      "schema": "",
      "columns": {
        "id": {
          "name": "id",
          "type": "text",
          "primaryKey": true,
          "notNull": true
        },
        "user_displayName": {
          "name": "user_displayName",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "email": {
          "name": "email",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "password_hash": {
          "name": "password_hash",
          "type": "text",
          "primaryKey": false,
          "notNull": false
        },
        "created_at": {
          "name": "created_at",
          "type": "timestamp",
          "primaryKey": false,
          "notNull": false
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_id_members_id_fk": {
          "name": "users_id_members_id_fk",
          "tableFrom": "users",
          "tableTo": "members",
          "columnsFrom": [
            "id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_user_displayName_members_displayName_fk": {
          "name": "users_user_displayName_members_displayName_fk",
          "tableFrom": "users",
          "tableTo": "members",
          "columnsFrom": [
            "user_displayName"
          ],
          "columnsTo": [
            "displayName"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {},
      "uniqueConstraints": {
        "users_email_unique": {
          "name": "users_email_unique",
          "nullsNotDistinct": false,
          "columns": [
            "email"
          ]
        }
      },
      "checkConstraints": {}
    },
    "public.users_in_group": {
      "name": "users_in_group",
      "schema": "",
      "columns": {
        "user_id": {
          "name": "user_id",
          "type": "text",
          "primaryKey": false,
          "notNull": true
        },
        "group_id": {
          "name": "group_id",
          "type": "uuid",
          "primaryKey": false,
          "notNull": true
        }
      },
      "indexes": {},
      "foreignKeys": {
        "users_in_group_user_id_users_id_fk": {
          "name": "users_in_group_user_id_users_id_fk",
          "tableFrom": "users_in_group",
          "tableTo": "users",
          "columnsFrom": [
            "user_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        },
        "users_in_group_group_id_groups_id_fk": {
          "name": "users_in_group_group_id_groups_id_fk",
          "tableFrom": "users_in_group",
          "tableTo": "groups",
          "columnsFrom": [
            "group_id"
          ],
          "columnsTo": [
            "id"
          ],
          "onDelete": "cascade",
          "onUpdate": "no action"
        }
      },
      "compositePrimaryKeys": {
        "users_in_group_group_id_user_id_pk": {
          "name": "users_in_group_group_id_user_id_pk",
          "columns": [
            "group_id",
            "user_id"
          ]
        }
      },
      "uniqueConstraints": {},
      "checkConstraints": {}
    }
  },
  "enums": {
    "public.attendance": {
      "name": "attendance",
      "schema": "public",
      "values": [
        "accepted",
        "maybe",
        "declined"
      ]
    },
    "public.timezone": {
      "name": "timezone",
      "schema": "public",
      "values": [
        "PST",
        "PDT",
        "MST",
        "MDT",
        "CST",
        "CDT",
        "EST",
        "EDT"
      ]
    }
  },
  "schemas": {},
  "sequences": {},
  "views": {},
  "_meta": {
    "columns": {},
    "schemas": {},
    "tables": {}
  }
}